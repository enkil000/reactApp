{"version":3,"sources":["components/Button.jsx","components/App.jsx","components/Functions.jsx","components/MathOperations.jsx","components/Numbers.jsx","components/Result.jsx","index.js"],"names":["Button","type","text","clickHandler","className","onClick","App","useState","stack","setStack","items","words","valorFinal","length","value","toString","onClickNumber","number","onContentClear","onDelete","newstack","substring","onClickOperation","operation","onClickEqual","equal","eval","Functions","MathOperations","numbers","renderButtons","map","Numbers","Result","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"yGAAA,gBAoBeA,IAjBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,aAAf,OACb,wBACEC,UAAWH,EACXI,QAAS,WACPF,EAAaD,IAHjB,SAME,+BAAOA,Q,+rCCDLI,IAAM,SAANA,MAAa,IAAD,UACUC,oDAAS,IADnB,8LACTC,MADS,cACFC,SADE,cAGVC,MAAQC,oDAAMH,MAAO,gBACrBI,WAAYF,MAAMG,OAAS,EAAIH,MAAMA,MAAMG,OAAO,GAAK,EAE7D,OACE,oEAAMT,UAAU,mBAAhB,UACE,2DAAC,uCAAD,CAAQU,MAAOF,WAAWG,aAC1B,kEAAKX,UAAU,UAAf,SACE,2DAAC,wCAAD,CACEY,cAAe,SAACC,GACdR,SAAS,GAAD,OAAID,OAAJ,OAAYS,SAI1B,2DAAC,0CAAD,CACEC,eAAgB,kBAAMT,SAAS,KAC/BU,SAAU,WACR,GAAIX,MAAMK,OAAS,EAAG,CACpB,IAAMO,EAAWZ,MAAMa,UAAU,EAAGb,MAAMK,OAAS,GACnDJ,SAASW,OAIf,2DAAC,+CAAD,CACEE,iBAAkB,SAACC,GACjBd,SAAS,GAAD,OAAID,OAAJ,OAAYe,KAEtBC,aAAc,sBAACC,OACbhB,SAASiB,KAAKlB,OAAOO,mBAOhBT,2B,8BC9Cf,uBAiBeqB,IAbG,SAAC,GAAD,IAAGT,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,SAAnB,OAChB,0BAASf,UAAU,YAAnB,UACE,cAAC,IAAD,CAAQH,KAAK,mBAAmBC,KAAK,QAAQC,aAAce,IAC3D,cAAC,IAAD,CAAQhB,KAAK,SAASC,aAAcgB,S,6BCPxC,uBAkBeS,IAdQ,SAAC,GAAD,IAAGN,EAAH,EAAGA,iBAAkBE,EAArB,EAAqBA,aAArB,OACrB,0BAASpB,UAAU,kBAAnB,UACE,cAAC,IAAD,CAAQF,KAAK,IAAIC,aAAcmB,IAC/B,cAAC,IAAD,CAAQpB,KAAK,IAAIC,aAAcmB,IAC/B,cAAC,IAAD,CAAQpB,KAAK,IAAIC,aAAcmB,IAC/B,cAAC,IAAD,CAAQpB,KAAK,IAAIC,aAAcmB,IAC/B,cAAC,IAAD,CAAQpB,KAAK,IAAIC,aAAcqB,S,6BCVnC,uBAIMK,EAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAE7BC,EAAgB,SAACd,GAQrB,OAAOa,EAAQE,KAPM,SAACd,GAAD,OACnB,cAAC,IAAD,CAEEf,KAAMe,EAAOF,WACbZ,aAAca,GAFTC,OAgBIe,IARC,SAAC,GAAD,IAAGhB,EAAH,EAAGA,cAAH,OACd,yBAASZ,UAAU,UAAnB,SAA8B0B,EAAcd,O,6BClB9C,gBAGMiB,EAAS,SAAC,GAAe,IAAbnB,EAAY,EAAZA,MAGhB,OACE,qBAAKV,UAAU,SAAf,SACE,+BAAOU,OASbmB,EAAOC,aAAe,CACpBpB,MAAO,KAGMmB,O,8BCrBf,sDAUAE,IAASC,OACL,cAAC,IAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.6d0e31d9.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ type, text, clickHandler }) => (\n  <button\n    className={type}\n    onClick={() => {\n      clickHandler(text);\n    }}\n  >\n    <span>{text}</span>\n  </button>\n);\n\nButton.propTypes = {\n  type: PropTypes.string,\n  text: PropTypes.string.isRequired,\n  clickHandler: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","/* eslint no-eval: 0 */\nimport React, { useState } from \"react\";\nimport words from \"lodash.words\";\nimport ReactDom from \"react-dom\";\nimport Functions from \"./Functions\";\nimport MathOperations from \"./MathOperations\";\nimport Numbers from \"./Numbers\";\nimport Result from \"./Result\";\n\nconst App = () => {\n  const [stack, setStack] = useState(\"\");\n\n  const items = words(stack, /[^-^+^*^/]+/g);\n  const valorFinal= items.length > 0 ? items[items.length-1] : 0\n  \n  return (\n    <main className=\"react-calculator\">\n      <Result value={valorFinal.toString()} />\n      <div className=\"numbers\">\n        <Numbers\n          onClickNumber={(number) => {\n            setStack(`${stack}${number}`);\n          }}\n        />\n      </div>\n      <Functions\n        onContentClear={() => setStack(\"\")}\n        onDelete={() => {\n          if (stack.length > 0) {\n            const newstack = stack.substring(0, stack.length - 1);\n            setStack(newstack);\n          }\n        }}\n      />\n      <MathOperations\n        onClickOperation={(operation) => {\n          setStack(`${stack}${operation}`);\n        }}\n        onClickEqual={(equal) => {\n          setStack(eval(stack).toString());\n        }}\n      />\n    </main>\n  );\n};\n\nexport default App;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Button from \"./Button\"\n\nconst Functions = ({ onContentClear, onDelete }) => (\n  <section className=\"functions\">\n    <Button type=\"button-long-text\" text=\"clear\" clickHandler={onContentClear} />\n    <Button text=\"&larr;\" clickHandler={onDelete} />\n  </section>\n);\n\nFunctions.propTypes = {\n     onContentClear: PropTypes.func.isRequired,\n     onDelete: PropTypes.func.isRequired,\n   };\n\n\nexport default Functions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"./Button\";\n\nconst MathOperations = ({ onClickOperation, onClickEqual }) => (\n  <section className=\"math-operations\">\n    <Button text=\"+\" clickHandler={onClickOperation} />\n    <Button text=\"-\" clickHandler={onClickOperation} />\n    <Button text=\"*\" clickHandler={onClickOperation} />\n    <Button text=\"/\" clickHandler={onClickOperation} />\n    <Button text=\"=\" clickHandler={onClickEqual} />\n  </section>\n);\n\nMathOperations.propTypes = {\n  onClickOperation: PropTypes.func.isRequired,\n  onClickEqual: PropTypes.func.isRequired,\n};\nexport default MathOperations;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"./Button\";\n\nconst numbers = [7,8,9,4,5,6,1,2,3,0];\n\nconst renderButtons = (onClickNumber) => {\n  const renderButton = (number) => (\n    <Button\n      key={number}\n      text={number.toString()}\n      clickHandler={onClickNumber}\n    />\n  );\n  return numbers.map(renderButton);\n};\n\nconst Numbers = ({ onClickNumber }) => (\n  <section className=\"numbers\">{renderButtons(onClickNumber)}</section>\n);\n\nNumbers.propTypes = {\n  onClickNumber: PropTypes.func.isRequired,\n};\n\nexport default Numbers;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Result = ({ value }) => {\n  //const { value } = props;\n  // en la funci√≥n flecha directamente lo estoy destructurando\n  return (\n    <div className=\"result\">\n      <span>{value}</span>\n    </div>\n  );\n};\n\nResult.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n\nResult.defaultProps = {\n  value: \"0\"\n};\n\nexport default Result;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./assets/css/App.css\"\n\n{\n  /*\n    al cambiar de nombre cualquier componente o fichero es necesario levantar el servidor de nuevo\n  */\n}\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}